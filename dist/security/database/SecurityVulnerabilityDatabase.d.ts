import * as vscode from 'vscode';
import { VulnerabilityInfo } from '../types';
/**
 * Database for caching and managing security vulnerability information
 */
export declare class SecurityVulnerabilityDatabase {
    private readonly context;
    private readonly dbPath;
    private readonly cache;
    private readonly updateInterval;
    private lastUpdate;
    constructor(context: vscode.ExtensionContext);
    /**
     * Check a package for known vulnerabilities
     */
    checkPackage(name: string, version: string): Promise<VulnerabilityInfo[]>;
    /**
     * Get detailed information about a specific vulnerability
     */
    getVulnerabilityDetails(vulnId: string): Promise<VulnerabilityInfo | undefined>;
    /**
     * Ensure the database is up to date
     */
    private ensureUpdated;
    /**
     * Load the vulnerability database from disk
     */
    private loadDatabase;
    /**
     * Update the vulnerability database from online sources
     */
    private updateDatabase;
    /**
     * Fetch vulnerabilities from npm security advisory
     */
    private fetchNpmVulnerabilities;
    /**
     * Fetch vulnerabilities from GitHub Security Advisory
     */
    private fetchGithubSecurityAdvisories;
    /**
     * Parse npm vulnerability data
     */
    private parseNpmVulnerabilities;
    /**
     * Parse GitHub security advisory data
     */
    private parseGithubAdvisories;
    /**
     * Map severity strings to standard levels
     */
    private mapSeverity;
    /**
     * Save the vulnerability database to disk
     */
    private saveDatabase;
}
