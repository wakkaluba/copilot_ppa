"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDisplaySettingsPanel = getDisplaySettingsPanel;
exports.getDisplaySettingsStyles = getDisplaySettingsStyles;
exports.getDisplaySettingsScript = getDisplaySettingsScript;
function getDisplaySettingsPanel(currentSettings) {
    return "\n    <div class=\"display-settings-panel\">\n        <h3>Display Settings</h3>\n        \n        <div class=\"setting-group\">\n            <label for=\"fontSize\">Font Size</label>\n            <div class=\"setting-control\">\n                <input type=\"range\" id=\"fontSize\" min=\"10\" max=\"24\" value=\"".concat(currentSettings.fontSize, "\" />\n                <span class=\"setting-value\">").concat(currentSettings.fontSize, "px</span>\n            </div>\n        </div>\n        \n        <div class=\"setting-group\">\n            <label for=\"messageSpacing\">Message Spacing</label>\n            <div class=\"setting-control\">\n                <input type=\"range\" id=\"messageSpacing\" min=\"4\" max=\"24\" value=\"").concat(currentSettings.messageSpacing, "\" />\n                <span class=\"setting-value\">").concat(currentSettings.messageSpacing, "px</span>\n            </div>\n        </div>\n        \n        <div class=\"setting-group\">\n            <label for=\"codeBlockTheme\">Code Block Theme</label>\n            <div class=\"setting-control\">\n                <select id=\"codeBlockTheme\">\n                    <option value=\"default\" ").concat(currentSettings.codeBlockTheme === 'default' ? 'selected' : '', ">Default</option>\n                    <option value=\"dark\" ").concat(currentSettings.codeBlockTheme === 'dark' ? 'selected' : '', ">Dark</option>\n                    <option value=\"light\" ").concat(currentSettings.codeBlockTheme === 'light' ? 'selected' : '', ">Light</option>\n                    <option value=\"high-contrast\" ").concat(currentSettings.codeBlockTheme === 'high-contrast' ? 'selected' : '', ">High Contrast</option>\n                </select>\n            </div>\n        </div>\n        \n        <div class=\"setting-group\">\n            <label for=\"userMessageColor\">User Message Color</label>\n            <div class=\"setting-control\">\n                <input type=\"color\" id=\"userMessageColor\" value=\"").concat(currentSettings.userMessageColor, "\" />\n                <span class=\"setting-value\">").concat(currentSettings.userMessageColor, "</span>\n            </div>\n        </div>\n        \n        <div class=\"setting-group\">\n            <label for=\"agentMessageColor\">Agent Message Color</label>\n            <div class=\"setting-control\">\n                <input type=\"color\" id=\"agentMessageColor\" value=\"").concat(currentSettings.agentMessageColor, "\" />\n                <span class=\"setting-value\">").concat(currentSettings.agentMessageColor, "</span>\n            </div>\n        </div>\n        \n        <div class=\"setting-group\">\n            <label for=\"timestampDisplay\">Show Timestamps</label>\n            <div class=\"setting-control\">\n                <input type=\"checkbox\" id=\"timestampDisplay\" ").concat(currentSettings.timestampDisplay ? 'checked' : '', " />\n            </div>\n        </div>\n        \n        <div class=\"setting-group\">\n            <label for=\"compactMode\">Compact Mode</label>\n            <div class=\"setting-control\">\n                <input type=\"checkbox\" id=\"compactMode\" ").concat(currentSettings.compactMode ? 'checked' : '', " />\n            </div>\n        </div>\n        \n        <div class=\"button-group\">\n            <button class=\"reset-settings\">Reset to Defaults</button>\n            <button class=\"apply-settings\">Apply Settings</button>\n        </div>\n    </div>\n    ");
}
function getDisplaySettingsStyles() {
    return "\n    .display-settings-panel {\n        padding: 16px;\n        background-color: var(--vscode-editor-background);\n        color: var(--vscode-editor-foreground);\n    }\n    \n    .setting-group {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        margin-bottom: 12px;\n        justify-content: space-between;\n    }\n    \n    .setting-group label {\n        flex: 1;\n        margin-right: 12px;\n    }\n    \n    .setting-control {\n        display: flex;\n        align-items: center;\n        flex: 2;\n    }\n    \n    .setting-value {\n        margin-left: 8px;\n        min-width: 40px;\n    }\n    \n    .button-group {\n        display: flex;\n        justify-content: flex-end;\n        margin-top: 16px;\n    }\n    \n    .button-group button {\n        margin-left: 8px;\n        padding: 6px 12px;\n        background-color: var(--vscode-button-background);\n        color: var(--vscode-button-foreground);\n        border: none;\n        cursor: pointer;\n    }\n    \n    .button-group button:hover {\n        background-color: var(--vscode-button-hoverBackground);\n    }\n    \n    input[type=\"range\"] {\n        flex: 1;\n    }\n    \n    input[type=\"color\"] {\n        height: 24px;\n        width: 40px;\n        border: none;\n        padding: 0;\n    }\n    \n    select {\n        background-color: var(--vscode-dropdown-background);\n        color: var(--vscode-dropdown-foreground);\n        border: 1px solid var(--vscode-dropdown-border);\n        padding: 4px 8px;\n    }\n    ";
}
function getDisplaySettingsScript() {
    return "\n    document.addEventListener('DOMContentLoaded', () => {\n        setupDisplaySettingsListeners();\n    });\n    \n    function setupDisplaySettingsListeners() {\n        const fontSizeInput = document.getElementById('fontSize');\n        const messageSpacingInput = document.getElementById('messageSpacing');\n        const codeBlockThemeSelect = document.getElementById('codeBlockTheme');\n        const userMessageColorInput = document.getElementById('userMessageColor');\n        const agentMessageColorInput = document.getElementById('agentMessageColor');\n        const timestampDisplayCheckbox = document.getElementById('timestampDisplay');\n        const compactModeCheckbox = document.getElementById('compactMode');\n        \n        if (fontSizeInput) {\n            fontSizeInput.addEventListener('input', (e) => {\n                const value = e.target.value;\n                fontSizeInput.nextElementSibling.textContent = `${value}px`;\n            });\n        }\n        \n        if (messageSpacingInput) {\n            messageSpacingInput.addEventListener('input', (e) => {\n                const value = e.target.value;\n                messageSpacingInput.nextElementSibling.textContent = `${value}px`;\n            });\n        }\n        \n        if (userMessageColorInput) {\n            userMessageColorInput.addEventListener('input', (e) => {\n                const value = e.target.value;\n                userMessageColorInput.nextElementSibling.textContent = value;\n            });\n        }\n        \n        if (agentMessageColorInput) {\n            agentMessageColorInput.addEventListener('input', (e) => {\n                const value = e.target.value;\n                agentMessageColorInput.nextElementSibling.textContent = value;\n            });\n        }\n        \n        const resetButton = document.querySelector('.reset-settings');\n        if (resetButton) {\n            resetButton.addEventListener('click', () => {\n                vscode.postMessage({\n                    command: 'resetDisplaySettings'\n                });\n            });\n        }\n        \n        const applyButton = document.querySelector('.apply-settings');\n        if (applyButton) {\n            applyButton.addEventListener('click', () => {\n                const settings = {\n                    fontSize: parseInt(fontSizeInput.value, 10),\n                    messageSpacing: parseInt(messageSpacingInput.value, 10),\n                    codeBlockTheme: codeBlockThemeSelect.value,\n                    userMessageColor: userMessageColorInput.value,\n                    agentMessageColor: agentMessageColorInput.value,\n                    timestampDisplay: timestampDisplayCheckbox.checked,\n                    compactMode: compactModeCheckbox.checked\n                };\n                \n                vscode.postMessage({\n                    command: 'updateDisplaySettings',\n                    settings\n                });\n            });\n        }\n    }\n    ";
}
