"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getConversationListHtml = getConversationListHtml;
exports.getConversationListStyles = getConversationListStyles;
exports.getConversationListScript = getConversationListScript;
function getConversationListHtml(conversations, currentConversationId) {
    return "\n    <div class=\"conversation-list\">\n        <div class=\"conversation-list-header\">\n            <h3>Conversations</h3>\n            <div class=\"search-container\">\n                <input type=\"text\" id=\"conversation-search\" placeholder=\"Search conversations...\" />\n                <button id=\"advanced-search-btn\" title=\"Advanced Search\">\n                    <i class=\"codicon codicon-filter\"></i>\n                </button>\n            </div>\n            <div class=\"conversation-actions\">\n                <button id=\"new-conversation-btn\" title=\"New Conversation\">\n                    <i class=\"codicon codicon-add\"></i>\n                </button>\n                <button id=\"import-conversation-btn\" title=\"Import Conversations\">\n                    <i class=\"codicon codicon-folder-opened\"></i>\n                </button>\n                <button id=\"export-all-conversations-btn\" title=\"Export All Conversations\">\n                    <i class=\"codicon codicon-save-all\"></i>\n                </button>\n            </div>\n        </div>\n        \n        <div id=\"conversation-filters\" class=\"conversation-filters\" style=\"display: none;\">\n            <div class=\"filter-group\">\n                <label>\n                    <input type=\"checkbox\" id=\"filter-today\" />\n                    Today\n                </label>\n                <label>\n                    <input type=\"checkbox\" id=\"filter-week\" />\n                    This week\n                </label>\n                <label>\n                    <input type=\"checkbox\" id=\"filter-month\" />\n                    This month\n                </label>\n            </div>\n            <div class=\"filter-group\">\n                <label>\n                    <input type=\"checkbox\" id=\"filter-user-messages\" />\n                    Has user messages\n                </label>\n                <label>\n                    <input type=\"checkbox\" id=\"filter-assistant-messages\" />\n                    Has assistant messages\n                </label>\n            </div>\n            <div class=\"filter-actions\">\n                <button id=\"apply-filters-btn\">Apply Filters</button>\n                <button id=\"reset-filters-btn\">Reset</button>\n            </div>\n        </div>\n        \n        <div class=\"conversation-items\">\n            ".concat(renderConversationItems(conversations, currentConversationId), "\n        </div>\n    </div>\n    ");
}
function getConversationListStyles() {
    return "\n    .conversation-list {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n    }\n    \n    .conversation-list-header {\n        display: flex;\n        flex-direction: column;\n        padding: 8px;\n        border-bottom: 1px solid var(--vscode-panel-border);\n    }\n    \n    .conversation-list-header h3 {\n        margin: 0 0 8px 0;\n    }\n    \n    .search-container {\n        display: flex;\n        margin-bottom: 8px;\n    }\n    \n    .search-container input {\n        flex: 1;\n        padding: 4px 8px;\n        border: 1px solid var(--vscode-input-border);\n        background-color: var(--vscode-input-background);\n        color: var(--vscode-input-foreground);\n    }\n    \n    .search-container button {\n        margin-left: 4px;\n        background-color: transparent;\n        border: none;\n        cursor: pointer;\n        color: var(--vscode-editor-foreground);\n    }\n    \n    .conversation-actions {\n        display: flex;\n        justify-content: flex-end;\n    }\n    \n    .conversation-actions button {\n        background-color: transparent;\n        border: none;\n        cursor: pointer;\n        color: var(--vscode-editor-foreground);\n        margin-left: 8px;\n    }\n    \n    .conversation-filters {\n        padding: 8px;\n        border-bottom: 1px solid var(--vscode-panel-border);\n        background-color: var(--vscode-editor-background);\n    }\n    \n    .filter-group {\n        display: flex;\n        flex-wrap: wrap;\n        margin-bottom: 8px;\n    }\n    \n    .filter-group label {\n        margin-right: 12px;\n        display: flex;\n        align-items: center;\n    }\n    \n    .filter-group input {\n        margin-right: 4px;\n    }\n    \n    .filter-actions {\n        display: flex;\n        justify-content: flex-end;\n    }\n    \n    .filter-actions button {\n        margin-left: 8px;\n        padding: 4px 8px;\n        background-color: var(--vscode-button-background);\n        color: var(--vscode-button-foreground);\n        border: none;\n        cursor: pointer;\n    }\n    \n    .conversation-items {\n        flex: 1;\n        overflow-y: auto;\n    }\n    \n    /* ...existing styles... */\n    ";
}
function getConversationListScript() {
    return "\n    document.addEventListener('DOMContentLoaded', () => {\n        setupConversationListListeners();\n    });\n    \n    function setupConversationListListeners() {\n        // New conversation button\n        document.getElementById('new-conversation-btn')?.addEventListener('click', () => {\n            vscode.postMessage({\n                command: 'newConversation'\n            });\n        });\n        \n        // Import conversation button\n        document.getElementById('import-conversation-btn')?.addEventListener('click', () => {\n            vscode.postMessage({\n                command: 'importConversation'\n            });\n        });\n        \n        // Export all conversations button\n        document.getElementById('export-all-conversations-btn')?.addEventListener('click', () => {\n            vscode.postMessage({\n                command: 'exportAllConversations'\n            });\n        });\n        \n        // Advanced search button\n        document.getElementById('advanced-search-btn')?.addEventListener('click', () => {\n            const filtersElement = document.getElementById('conversation-filters');\n            if (filtersElement) {\n                const isVisible = filtersElement.style.display !== 'none';\n                filtersElement.style.display = isVisible ? 'none' : 'block';\n            }\n        });\n        \n        // Search input\n        const searchInput = document.getElementById('conversation-search');\n        if (searchInput) {\n            searchInput.addEventListener('input', debounce((e) => {\n                const query = e.target.value;\n                vscode.postMessage({\n                    command: 'searchConversations',\n                    query\n                });\n            }, 300));\n        }\n        \n        // Apply filters button\n        document.getElementById('apply-filters-btn')?.addEventListener('click', () => {\n            const filters = {\n                today: document.getElementById('filter-today')?.checked,\n                week: document.getElementById('filter-week')?.checked,\n                month: document.getElementById('filter-month')?.checked,\n                userMessages: document.getElementById('filter-user-messages')?.checked,\n                assistantMessages: document.getElementById('filter-assistant-messages')?.checked\n            };\n            \n            vscode.postMessage({\n                command: 'filterConversations',\n                filters\n            });\n        });\n        \n        // Reset filters button\n        document.getElementById('reset-filters-btn')?.addEventListener('click', () => {\n            // Reset all checkboxes\n            document.querySelectorAll('#conversation-filters input[type=\"checkbox\"]')\n                .forEach(checkbox => {\n                    checkbox.checked = false;\n                });\n            \n            // Clear search input\n            if (searchInput) {\n                searchInput.value = '';\n            }\n            \n            // Reset to show all conversations\n            vscode.postMessage({\n                command: 'resetConversationFilters'\n            });\n        });\n        \n        // Conversation item click\n        document.querySelectorAll('.conversation-item').forEach(item => {\n            item.addEventListener('click', () => {\n                const conversationId = item.getAttribute('data-id');\n                if (conversationId) {\n                    vscode.postMessage({\n                        command: 'openConversation',\n                        conversationId\n                    });\n                }\n            });\n        });\n        \n        // Helper function for debouncing\n        function debounce(func, wait) {\n            let timeout;\n            return function(...args) {\n                const context = this;\n                clearTimeout(timeout);\n                timeout = setTimeout(() => func.apply(context, args), wait);\n            };\n        }\n    }\n    ";
}
function renderConversationItems(conversations, currentConversationId) {
    if (!conversations || conversations.length === 0) {
        return "\n        <div class=\"empty-state\">\n            <p>No conversations yet</p>\n            <button id=\"start-conversation-btn\">Start a new conversation</button>\n        </div>\n        ";
    }
    return conversations.map(function (conversation) {
        var isActive = conversation.id === currentConversationId;
        var date = new Date(conversation.updated).toLocaleString();
        var messageCount = conversation.messages.length;
        return "\n        <div class=\"conversation-item ".concat(isActive ? 'active' : '', "\" data-id=\"").concat(conversation.id, "\">\n            <div class=\"conversation-item-content\">\n                <div class=\"conversation-title\">").concat(escapeHtml(conversation.title), "</div>\n                <div class=\"conversation-meta\">\n                    <span class=\"conversation-date\">").concat(date, "</span>\n                    <span class=\"conversation-message-count\">").concat(messageCount, " message").concat(messageCount !== 1 ? 's' : '', "</span>\n                </div>\n            </div>\n        </div>\n        ");
    }).join('');
}
function escapeHtml(unsafe) {
    return unsafe
        .replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;")
        .replace(/'/g, "&#039;");
}
